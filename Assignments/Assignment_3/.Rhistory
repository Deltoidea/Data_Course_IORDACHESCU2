as.character(dat$Headwidth)
levels(dat$Headwidth) # levels gives all the "options" of a factor you feed it
# I notice a couple weird ones in there: "" and "41mm"
# The "" means a missing value, basically. The "41mm" sure looks like a data entry error.
# It should probably be "41.000"
glimpse(dat)
# FIND WHICH ONES HAVE "41mm"
bad41 <- which(dat$Headwidth == "41mm")
# CONVERT THOSE TO "41.000"
dat$Headwidth[bad41] <- "41.000"
# DO THE SAME FOR "", BUT CONVERT THOSE TO "NA"
blankspaces <- which(dat$Headwidth == "")
dat$Headwidth[blankspaces] <- NA
# NOW, REMOVE ALL THE ROWS OF "dat" THAT HAVE AN "NA" VALUE
dat2 <- na.omit(dat)
# NOW, CONVERT THAT PESKY "Headwidth" COLUMN INTO A NUMERIC VECTOR WITHIN "dat"
unique(dat$Headwidth)
dat2$Headwidth <- factor(dat2$Headwidth,levels= unique(dat2$Headwidth))
dat2$Headwidth <- dat2$Headwidth %>% as.character() %>% as.numeric()
glimpse(dat2)
plot(dat2$Headwidth, dat2$Mass)
#how to tell R to forget levels: factor(dat2$Headwidth,levels= unique(dat2$Headwidth)
# LET'S LEARN HOW TO MAKE A DATA FRAME FROM SCRATCH... WE JUST FEED IT VECTORS WITH NAMES!
# make some vectors *of equal length* (or you can pull these from existing vectors)
col1 = c("hat", "tie", "shoes", "bandana")
col2 = c(1,2,3,4)
col3 = factor(c(1,2,3,4)) # see how we can designate something as a factor
# here's the data frame command:
data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # colname = vector, colname = vector....
df1 = data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # assign to df1
df1 # look at it...note column names are what we gave it.
#adding levels: levels(dat$headlength) <- c(levels(dat$headlength), "new level"))
# Make a data frame from the first 20 rows of the ant data that only has "Colony" and "Mass"
# save it into an object called "dat3"
dat2(dat2$Colony)
dat3 <- cbind(dat2$Colony, dat2$Mass) %>% head(n=20L)
plot(y=dat2$Mass,x=dat2$Size.class)
under30mass <- dat2 %>% filter(Size.class == "<30") %>% select(Mass)
mean(under30mass)
mass30_34 <- massdat2 %>% filter(Size.class == "30-34") %>% select(Mass)
for(i in levels(dat2$Size.class)){
print(mean(dat2[dat2$Size.class == i, "Mass"]))
}
###### WRITING OUT FILES FROM R #######
?write.csv()
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
# Write your new object "dat3" to a file named "LASTNAME_first_file.csv" in your PERSONAL git repository
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
### for loops in R ###
#simplest example:
for(i in 1:10){
print(i)
}
#another easy one
for(i in levels(dat$Size.class)){
print(i)
}
# can calculate something for each value of i ...can use to subset to groups of interest
for(i in levels(dat$Size.class)){
print(mean(dat[dat$Size.class == i,"Mass"]))
}
# more complex:
# define a new vector or data frame outside the for loop first
new_vector = c()# it's empty
# also define a counter
x = 1
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
x = x+1 # add 1 to the counter (this will change the element of new_vector we access each loop)
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
#check it
new_vector
# PUT THIS TOGETHER WITH THE LEVELS OF OUR FACTOR SO WE HAVE A NEW DATA FRAME:
# FIRST COLUMN WILL BE THE FACTOR LEVELS....
# SECOND COLUMN WILL BE NAMED "MEAN" AND WILL BE VALUES FROM  new_vector
#fill it in
size_class_mean_mass = data.frame(data.frame(Size_class))
dat2 %>% group_by(Size.class) %>%
summarise(mean_mass = mean(Mass), mean_headwidth = mean(Headwidth))
############ YOUR HOMEWORK ASSIGNMENT ##############
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
# 2.  Write the code to save it (with meaningful labels) as a jpeg file
jpeg()
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
dev.off()
# 3.  Subset the thatch ant data set to only include ants from colony 1 and colony 2
Colony1_2<- dat2 %>% filter(dat2$Colony == 1:2)
# 4.  Write code to save this new subset as a .csv file
write.csv(Colony1_2, "Colony1_2.csv")
?write.csv
# 5.  Upload this R script (with all answers filled in and tasks completed) to canvas
# I should be able to run your R script and get all the plots created and saved, etc.
dat3 <- cbind(dat2$Colony, dat2$Mass) %>% head(n=20L)
plot(y=dat2$Mass,x=dat2$Size.class)
dat = read.csv("./Data/thatch_ant.csv")
getwd()
list.files()
dat = read.csv("./Data/thatch_ant.csv")
file.copy(from = "./Data/thatch_ant.csv",to= "thatch_ant.csv")
file.copy(from = "../../Data/thatch_ant.csv",to= "thatch_ant.csv")
list.files()
dat = read.csv("thatch_ant.csv")
# Assignment Week 3
#this file is meant to be ran using the R project file directly in my Data_Course_IORDACHESCU REPOSITORY.
library(tidyverse)
library(plyr)
# topics:   type conversions, factors, plot(), making a data frame from "scratch",
#           reordering,
# vector operations!
vector1 = c(1,2,3,4,5,6,7,8,9,10)
vector2 = c(5,6,7,8,4,3,2,1,3,10)
vector1*vector2
list.files()
getwd(
)
dat = read.csv("thatch_ant.csv")
list.files()
names(dat)
#why are these plots different???
plot(x=dat$Headwidth..mm., y=dat$Mass)
plot(x=dat$Size.class, y=dat$Mass)
#check the classes of these vectors
class(dat$Headwidth..mm.)
class(dat$Size.class)
# plot() function behaves differently depending on classes of objects given to it!
# Check all classes (for each column in dat)
str(dat)
# Two of them are "Factor" ....why is the column "Headwidth" a factor? It looks numeric!
# we can try to coerce one format into another with a family of functions
# as.factor, as.matrix, as.data.frame, as.numeric, as.character, as.POSIXct, etc....
#make a numeric vector to play with:
nums = c(1,1,2,2,2,2,3,3,3,4,4,4,4,4,4,4,5,6,7,8,9)
class(nums) # make sure it's numeric
# convert to a factor
as.factor(nums) # show in console
nums_factor = as.factor(nums) #assign it to a new object as a factor
class(nums_factor) # check it
#check it out
plot(nums)
plot(nums_factor)
# take note of how numeric vectors and factors behave differently in plot()
# Let's modify and save these plots. Why not!?
?plot()
plot(nums, main = "My Title", xlab = "My axis label", ylab = "My other axis label")
getwd()
dev.off()
# back to our ant data...
as.character(dat$Headwidth)
levels(dat$Headwidth) # levels gives all the "options" of a factor you feed it
# I notice a couple weird ones in there: "" and "41mm"
# The "" means a missing value, basically. The "41mm" sure looks like a data entry error.
# It should probably be "41.000"
glimpse(dat)
# FIND WHICH ONES HAVE "41mm"
bad41 <- which(dat$Headwidth == "41mm")
getwd()
list.files()
# CONVERT THOSE TO "41.000"
dat$Headwidth[bad41] <- "41.000"
# DO THE SAME FOR "", BUT CONVERT THOSE TO "NA"
blankspaces <- which(dat$Headwidth == "")
dat$Headwidth[blankspaces] <- NA
# NOW, REMOVE ALL THE ROWS OF "dat" THAT HAVE AN "NA" VALUE
dat2 <- na.omit(dat)
# NOW, CONVERT THAT PESKY "Headwidth" COLUMN INTO A NUMERIC VECTOR WITHIN "dat"
unique(dat$Headwidth)
dat2$Headwidth <- factor(dat2$Headwidth,levels= unique(dat2$Headwidth))
dat2$Headwidth <- dat2$Headwidth %>% as.character() %>% as.numeric()
glimpse(dat2)
plot(dat2$Headwidth, dat2$Mass)
#how to tell R to forget levels: factor(dat2$Headwidth,levels= unique(dat2$Headwidth)
# LET'S LEARN HOW TO MAKE A DATA FRAME FROM SCRATCH... WE JUST FEED IT VECTORS WITH NAMES!
# make some vectors *of equal length* (or you can pull these from existing vectors)
col1 = c("hat", "tie", "shoes", "bandana")
col2 = c(1,2,3,4)
col3 = factor(c(1,2,3,4)) # see how we can designate something as a factor
# here's the data frame command:
data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # colname = vector, colname = vector....
df1 = data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # assign to df1
df1 # look at it...note column names are what we gave it.
#adding levels: levels(dat$headlength) <- c(levels(dat$headlength), "new level"))
# Make a data frame from the first 20 rows of the ant data that only has "Colony" and "Mass"
# save it into an object called "dat3"
dat2(dat2$Colony)
dat3 <- cbind(dat2$Colony, dat2$Mass) %>% head(n=20L)
plot(y=dat2$Mass,x=dat2$Size.class)
under30mass <- dat2 %>% filter(Size.class == "<30") %>% select(Mass)
mean(under30mass)
mass30_34 <- massdat2 %>% filter(Size.class == "30-34") %>% select(Mass)
for(i in levels(dat2$Size.class)){
print(mean(dat2[dat2$Size.class == i, "Mass"]))
}
###### WRITING OUT FILES FROM R #######
?write.csv()
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
# Write your new object "dat3" to a file named "LASTNAME_first_file.csv" in your PERSONAL git repository
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
### for loops in R ###
#simplest example:
for(i in 1:10){
print(i)
}
#another easy one
for(i in levels(dat$Size.class)){
print(i)
}
# can calculate something for each value of i ...can use to subset to groups of interest
for(i in levels(dat$Size.class)){
print(mean(dat[dat$Size.class == i,"Mass"]))
}
# more complex:
# define a new vector or data frame outside the for loop first
new_vector = c()# it's empty
# also define a counter
x = 1
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
x = x+1 # add 1 to the counter (this will change the element of new_vector we access each loop)
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
#check it
new_vector
# PUT THIS TOGETHER WITH THE LEVELS OF OUR FACTOR SO WE HAVE A NEW DATA FRAME:
# FIRST COLUMN WILL BE THE FACTOR LEVELS....
# SECOND COLUMN WILL BE NAMED "MEAN" AND WILL BE VALUES FROM  new_vector
#fill it in
size_class_mean_mass = data.frame(data.frame(Size_class))
dat2 %>% group_by(Size.class) %>%
summarise(mean_mass = mean(Mass), mean_headwidth = mean(Headwidth))
############ YOUR HOMEWORK ASSIGNMENT ##############
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
# 2.  Write the code to save it (with meaningful labels) as a jpeg file
jpeg()
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
dev.off()
# 3.  Subset the thatch ant data set to only include ants from colony 1 and colony 2
Colony1_2<- dat2 %>% filter(dat2$Colony == 1:2)
# 4.  Write code to save this new subset as a .csv file
write.csv(Colony1_2, "Colony1_2.csv")
?write.csv
# 5.  Upload this R script (with all answers filled in and tasks completed) to canvas
# I should be able to run your R script and get all the plots created and saved, etc.
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
read.delim("../../Data/ITS_mapping.csv")
df <- read.delim("../../Data/ITS_mapping.csv")
df2 <-
df %>% filter(Ecosys_Type %in% c("Aerial","Marine"))
library(tidyverse)
df2 <-
df %>% filter(Ecosys_Type %in% c("Aerial","Marine"))
df2 <- df %>% filter(Ecosys_Type %in% c("Aerial","Marine"))
View(df2)
df[df$Ecosys_Type %in% c("Aerial", "Marine")]
df[df$Ecosys_Type %in% c("Aerial", "Marine"),]
summary(df$Lat)
summary(df$Lat)[3]
summary(df$Lat)[3,4]
summary(df$Lat)[3:4]
summary(df$Lat)[c(3,5)]
df %>% filter(df$Ecosys_Type== "Marine")
summary(df$Lat)
table(df)
table(df$Lat)
summary(df$Lat)
table(df$Ecosys_Type)
table(df$Ecosys_Type[df$Ecosys_Type == "Marine"])
table(df$Ecosys_Type[df$Ecosys_Type == "Marine", "Terrestrial"])
table(df$Ecosys_Type[df$Ecosys_Type == "Marine"| "Terrestrial"])
table(df$Ecosys_Type[df$Ecosys_Type == "Marine", "Terrestrial"])
df %>% filter(df$Ecosys_Type== "Marine" "Terrestrial") %>% summary()
df %>% filter(df$Ecosys_Type== "Marine", "Terrestrial") %>% summary()
df %>% filter(df$Ecosys_Type== c("Marine", "Terrestrial") %>% summary()
table(df$Ecosys_Type[df$Ecosys_Type == "Marine"])
df %>% group_by(Ecosys_Type) %>% summarise(NumberOfSamples = n) %>% filter(Ecosys_Type %in% c("Marine", "Terrestrial") %>% summary()
length(marine$Lat)
marine <- df %>% filter(Ecosys_Type== "Marine")
terrestrial <- df %>% filter(Ecosys_Type== "Terrestrial")
length(marine$Lat)
mean(marine$Lat)
dat = read.csv("thatch_ant.csv")
# Assignment Week 3
#this file is meant to be ran using the R project file directly in my Data_Course_IORDACHESCU REPOSITORY.
library(tidyverse)
library(plyr)
# topics:   type conversions, factors, plot(), making a data frame from "scratch",
#           reordering,
# vector operations!
vector1 = c(1,2,3,4,5,6,7,8,9,10)
vector2 = c(5,6,7,8,4,3,2,1,3,10)
vector1*vector2
list.files()
getwd(
)
dat = read.csv("thatch_ant.csv")
list.files()
names(dat)
#why are these plots different???
plot(x=dat$Headwidth..mm., y=dat$Mass)
plot(x=dat$Size.class, y=dat$Mass)
#check the classes of these vectors
class(dat$Headwidth..mm.)
class(dat$Size.class)
# plot() function behaves differently depending on classes of objects given to it!
# Check all classes (for each column in dat)
str(dat)
# Two of them are "Factor" ....why is the column "Headwidth" a factor? It looks numeric!
# we can try to coerce one format into another with a family of functions
# as.factor, as.matrix, as.data.frame, as.numeric, as.character, as.POSIXct, etc....
#make a numeric vector to play with:
nums = c(1,1,2,2,2,2,3,3,3,4,4,4,4,4,4,4,5,6,7,8,9)
class(nums) # make sure it's numeric
# convert to a factor
as.factor(nums) # show in console
nums_factor = as.factor(nums) #assign it to a new object as a factor
class(nums_factor) # check it
#check it out
plot(nums)
plot(nums_factor)
# take note of how numeric vectors and factors behave differently in plot()
# Let's modify and save these plots. Why not!?
?plot()
plot(nums, main = "My Title", xlab = "My axis label", ylab = "My other axis label")
getwd()
dev.off()
# back to our ant data...
as.character(dat$Headwidth)
levels(dat$Headwidth) # levels gives all the "options" of a factor you feed it
# I notice a couple weird ones in there: "" and "41mm"
# The "" means a missing value, basically. The "41mm" sure looks like a data entry error.
# It should probably be "41.000"
glimpse(dat)
# FIND WHICH ONES HAVE "41mm"
bad41 <- which(dat$Headwidth == "41mm")
getwd()
list.files()
# CONVERT THOSE TO "41.000"
dat$Headwidth[bad41] <- "41.000"
# DO THE SAME FOR "", BUT CONVERT THOSE TO "NA"
blankspaces <- which(dat$Headwidth == "")
dat$Headwidth[blankspaces] <- NA
# NOW, REMOVE ALL THE ROWS OF "dat" THAT HAVE AN "NA" VALUE
dat2 <- na.omit(dat)
# NOW, CONVERT THAT PESKY "Headwidth" COLUMN INTO A NUMERIC VECTOR WITHIN "dat"
unique(dat$Headwidth)
dat2$Headwidth <- factor(dat2$Headwidth,levels= unique(dat2$Headwidth))
dat2$Headwidth <- dat2$Headwidth %>% as.character() %>% as.numeric()
glimpse(dat2)
plot(dat2$Headwidth, dat2$Mass)
plot(dat2$Headwidth, dat2$Mass)
# Assignment Week 3
#this file is meant to be ran using the R project file directly in my Data_Course_IORDACHESCU REPOSITORY.
library(tidyverse)
library(plyr)
# topics:   type conversions, factors, plot(), making a data frame from "scratch",
#           reordering,
# vector operations!
vector1 = c(1,2,3,4,5,6,7,8,9,10)
vector2 = c(5,6,7,8,4,3,2,1,3,10)
vector1*vector2
list.files()
getwd(
)
dat = read.csv("thatch_ant.csv")
list.files()
names(dat)
#why are these plots different???
plot(x=dat$Headwidth..mm., y=dat$Mass)
plot(x=dat$Size.class, y=dat$Mass)
#check the classes of these vectors
class(dat$Headwidth..mm.)
class(dat$Size.class)
# plot() function behaves differently depending on classes of objects given to it!
# Check all classes (for each column in dat)
str(dat)
# Two of them are "Factor" ....why is the column "Headwidth" a factor? It looks numeric!
# we can try to coerce one format into another with a family of functions
# as.factor, as.matrix, as.data.frame, as.numeric, as.character, as.POSIXct, etc....
#make a numeric vector to play with:
nums = c(1,1,2,2,2,2,3,3,3,4,4,4,4,4,4,4,5,6,7,8,9)
class(nums) # make sure it's numeric
# convert to a factor
as.factor(nums) # show in console
nums_factor = as.factor(nums) #assign it to a new object as a factor
class(nums_factor) # check it
#check it out
plot(nums)
plot(nums_factor)
# take note of how numeric vectors and factors behave differently in plot()
# Let's modify and save these plots. Why not!?
?plot()
plot(nums, main = "My Title", xlab = "My axis label", ylab = "My other axis label")
getwd()
dev.off()
# back to our ant data...
as.character(dat$Headwidth)
levels(dat$Headwidth) # levels gives all the "options" of a factor you feed it
# I notice a couple weird ones in there: "" and "41mm"
# The "" means a missing value, basically. The "41mm" sure looks like a data entry error.
# It should probably be "41.000"
glimpse(dat)
# FIND WHICH ONES HAVE "41mm"
bad41 <- which(dat$Headwidth == "41mm")
getwd()
list.files()
# CONVERT THOSE TO "41.000"
dat$Headwidth[bad41] <- "41.000"
# DO THE SAME FOR "", BUT CONVERT THOSE TO "NA"
blankspaces <- which(dat$Headwidth == "")
dat$Headwidth[blankspaces] <- NA
# NOW, REMOVE ALL THE ROWS OF "dat" THAT HAVE AN "NA" VALUE
dat2 <- na.omit(dat)
# NOW, CONVERT THAT PESKY "Headwidth" COLUMN INTO A NUMERIC VECTOR WITHIN "dat"
unique(dat$Headwidth)
dat2$Headwidth <- factor(dat2$Headwidth,levels= unique(dat2$Headwidth))
dat2$Headwidth <- dat2$Headwidth %>% as.character() %>% as.numeric()
glimpse(dat2)
plot(dat2$Headwidth, dat2$Mass)
#how to tell R to forget levels: factor(dat2$Headwidth,levels= unique(dat2$Headwidth)
# LET'S LEARN HOW TO MAKE A DATA FRAME FROM SCRATCH... WE JUST FEED IT VECTORS WITH NAMES!
# make some vectors *of equal length* (or you can pull these from existing vectors)
col1 = c("hat", "tie", "shoes", "bandana")
col2 = c(1,2,3,4)
col3 = factor(c(1,2,3,4)) # see how we can designate something as a factor
# here's the data frame command:
data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # colname = vector, colname = vector....
df1 = data.frame(Clothes = col1, Numbers = col2, Factor_numbers = col3) # assign to df1
df1 # look at it...note column names are what we gave it.
#adding levels: levels(dat$headlength) <- c(levels(dat$headlength), "new level"))
# Make a data frame from the first 20 rows of the ant data that only has "Colony" and "Mass"
# save it into an object called "dat3"
dat2(dat2$Colony)
dat3 <- cbind(dat2$Colony, dat2$Mass) %>% head(n=20L)
plot(y=dat2$Mass,x=dat2$Size.class)
under30mass <- dat2 %>% filter(Size.class == "<30") %>% select(Mass)
mean(under30mass)
mass30_34 <- massdat2 %>% filter(Size.class == "30-34") %>% select(Mass)
for(i in levels(dat2$Size.class)){
print(mean(dat2[dat2$Size.class == i, "Mass"]))
}
###### WRITING OUT FILES FROM R #######
?write.csv()
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
# Write your new object "dat3" to a file named "LASTNAME_first_file.csv" in your PERSONAL git repository
write.csv(dat3, "Assignments/Assignment_3/IORDACHESCU_cody_file.csv")
### for loops in R ###
#simplest example:
for(i in 1:10){
print(i)
}
#another easy one
for(i in levels(dat$Size.class)){
print(i)
}
# can calculate something for each value of i ...can use to subset to groups of interest
for(i in levels(dat$Size.class)){
print(mean(dat[dat$Size.class == i,"Mass"]))
}
# more complex:
# define a new vector or data frame outside the for loop first
new_vector = c()# it's empty
# also define a counter
x = 1
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
x = x+1 # add 1 to the counter (this will change the element of new_vector we access each loop)
for(i in levels(dat2$Size.class)){
new_vector[x](mean(dat2[dat2$Size.class == i, "Mass"]))
}
#check it
new_vector
# PUT THIS TOGETHER WITH THE LEVELS OF OUR FACTOR SO WE HAVE A NEW DATA FRAME:
# FIRST COLUMN WILL BE THE FACTOR LEVELS....
# SECOND COLUMN WILL BE NAMED "MEAN" AND WILL BE VALUES FROM  new_vector
#fill it in
size_class_mean_mass = data.frame(data.frame(Size_class))
dat2 %>% group_by(Size.class) %>%
summarise(mean_mass = mean(Mass), mean_headwidth = mean(Headwidth))
############ YOUR HOMEWORK ASSIGNMENT ##############
# 1.  Make a scatterplot of headwidth vs mass. See if you can get the points to be colored by "Colony"
plot(x=dat2$Headwidth, y=dat2$Mass,
col=dat2$Colony,
ylab = "Mass",
xlab ="Headwidth",
main = "Thatch Ant Mass vs Headwidth" )
